{"version":3,"sources":["assets/images/van.svg","assets/images/calendar.svg","core/context/ModalProvider.tsx","components/elements/Typography/Title/index.ts","components/elements/Typography/Title/Title.tsx","components/elements/Typography/Text/index.ts","components/elements/Typography/Text/Text.tsx","features/delivery/components/DeliveryDayButton/useDeliveryDayButton.ts","utils/dates.ts","features/delivery/components/DeliveryDayButton/DeliveryDayButtonDesc/index.ts","features/delivery/components/DeliveryDayButton/DeliveryDayButtonDesc/DeliveryDayButtonDesc.tsx","hooks/useClickOutside.ts","components/blocks/Modal/useModal.ts","components/blocks/Modal/index.ts","components/blocks/Modal/Modal.tsx","features/delivery/components/Calendar/CalendarMonth/index.ts","features/delivery/components/Calendar/CalendarMonth/CalendarMonth.tsx","features/delivery/components/Calendar/CalendarWeek/index.ts","features/delivery/components/Calendar/CalendarWeek/CalendarWeek.tsx","features/delivery/components/Calendar/CalendarDays/index.ts","features/delivery/components/Calendar/CalendarDays/CalendarDays.tsx","features/delivery/components/Calendar/CalendarControls/useCalendarControls.ts","components/elements/Button/index.ts","components/elements/Button/Button.tsx","features/delivery/components/Calendar/CalendarControls/index.ts","features/delivery/components/Calendar/CalendarControls/CalendarControls.tsx","features/delivery/components/Calendar/index.ts","features/delivery/components/Calendar/Calendar.tsx","features/delivery/components/DeliveryDayButton/DeliveryDayButtonCalendar/index.ts","features/delivery/components/DeliveryDayButton/DeliveryDayButtonCalendar/DeliveryDayButtonCalendar.tsx","features/delivery/components/DeliveryDayButton/index.ts","features/delivery/components/DeliveryDayButton/DeliveryDayButton.tsx","features/delivery/components/DeliveryDayWidget/index.ts","features/delivery/components/DeliveryDayWidget/DeliveryDayWidget.tsx","core/app/App/index.ts","core/app/App/App.tsx","index.tsx"],"names":["module","exports","ModalContext","createContext","ModalProvider","children","modalRef","useRef","useState","modalContext","setModalContext","useEffect","current","Provider","value","ref","Title","type","className","style","trim","Text","useDeliveryDayButton","date","Date","calendarDate","calendarDays","selectedDate","setSelectedDate","activeDate","setActiveDate","firstDayPosition","getDay","daysInMonth","getFullYear","getMonth","getDate","formattedDateTitle","toLocaleDateString","weekday","month","day","formatDateTitle","getDisabledDateClassName","index","i","push","handleSetCalendarDays","DeliveryDayButtonDesc","src","van","alt","useClickOutside","onClickOutside","isActive","setActive","mousedown","e","el","target","Node","contains","mouseup","document","addEventListener","removeEventListener","useModal","isModalOpen","onClose","modalNode","useContext","fadeType","setFadeType","setTimeout","handleClose","handleTransitionEnd","propertyName","Modal","modalContentRef","ReactDOM","createPortal","onTransitionEnd","cloneElement","CalendarMonth","CalendarWeek","label","map","key","CalendarDays","onClick","useCalendarControls","onModalClose","handleSelectDateConfirm","handleSelectDateCancel","Button","size","CalendarControls","Calendar","DeliveryDayButtonCalendar","setIsModalOpen","calendar","DeliveryDayButton","DeliveryDayWidget","App","render","getElementById"],"mappings":"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","file":"static/js/main.5fdb2f2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/van.54ef1ff3.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar.0d43b34c.svg\";","import React, {\n  useState,\n  useEffect,\n  useRef,\n  createContext,\n  ReactChild\n} from \"react\";\n\nexport const ModalContext = createContext(null);\n\ntype ModalProvider = {\n  children: ReactChild;\n};\n\nconst ModalProvider = ({ children }: ModalProvider) => {\n  const modalRef = useRef<any>();\n  const [modalContext, setModalContext] = useState();\n\n  useEffect(() => {\n    setModalContext(modalRef.current);\n  }, []);\n\n  return (\n    <>\n      <ModalContext.Provider value={modalContext}>\n        {children}\n      </ModalContext.Provider>\n      <div ref={modalRef} />\n    </>\n  );\n};\n\nexport default ModalProvider;\n","import Title from \"./Title\";\n\nexport default Title;\n","import React, { CSSProperties } from \"react\";\n\n// styles\nimport \"components/elements/Typography/Title/Title.scss\";\n\ntype TitleType = \"h1\";\n\ntype Title = {\n  children: any;\n  type?: TitleType;\n  className?: string;\n  style?: CSSProperties;\n};\n\nconst Title = ({ type = \"h1\", children, className = \"\", style }: Title) => (\n  <h1 style={style} className={`title title--${type} ${className}`.trim()}>\n    {children}\n  </h1>\n);\n\nexport default Title;\n","import Text from \"./Text\";\n\nexport default Text;\n","import React, { CSSProperties } from \"react\";\n\n// styles\nimport \"components/elements/Typography/Text/Text.scss\";\n\ntype TextType = \"regular\" | \"small\";\n\ntype Text = {\n  children: any;\n  type?: TextType;\n  className?: string;\n  style?: CSSProperties;\n};\n\nconst Text = ({ type = \"regular\", children, className = \"\", style }: Text) => (\n  <p style={style} className={`text text--${type} ${className}`.trim()}>\n    {children}\n  </p>\n);\n\nexport default Text;\n","import { useState, useEffect } from \"react\";\n\n// utils\nimport { getDaysInMonth, formatDateTitle } from \"utils/dates\";\n\nexport type CalendarDays = {\n  day: number;\n  date: Date;\n  className: string;\n};\n\nconst useDeliveryDayButton = () => {\n  const [calendarDate, setCalendarDate] = useState(new Date(2019, 7));\n  const [calendarDays, setCalendarDays] = useState<CalendarDays[]>([]);\n\n  const [selectedDate, setSelectedDate] = useState(new Date(2019, 7, 1));\n  const [activeDate, setActiveDate] = useState(selectedDate);\n\n  const firstDayPosition = calendarDate.getDay();\n  const daysInMonth = getDaysInMonth(calendarDate);\n  const formattedDateTitle = formatDateTitle(selectedDate);\n\n  const getFirstDayPositionClassName = (index: number) =>\n    `${\n      index === firstDayPosition\n        ? `calendar__days-item--start-${firstDayPosition}`\n        : \"\"\n    }`;\n\n  const getDisabledDateClassName = (date: Date) =>\n    `${\n      date.getDay() === 2 || date.getDay() === 5 || date.getDay() === 6\n        ? \"calendar__days-item--disabled\"\n        : \"\"\n    }`;\n\n  const handleSetCalendarDays = () => {\n    let day = 1;\n\n    for (let i = 1; i < daysInMonth + firstDayPosition; i++) {\n      if (i < firstDayPosition) {\n        // to NOT add empty nodes before first day of the month\n        continue;\n      } else {\n        const date = new Date(2019, 7, day);\n\n        calendarDays.push({\n          day,\n          date,\n          className: `${getFirstDayPositionClassName(\n            i\n          )} ${getDisabledDateClassName(date)}`\n        });\n\n        day++;\n      }\n    }\n  };\n\n  useEffect(() => {\n    handleSetCalendarDays();\n  }, []);\n\n  return {\n    calendarDays,\n    selectedDate,\n    setSelectedDate,\n    activeDate,\n    setActiveDate,\n    formattedDateTitle\n  };\n};\n\nexport default useDeliveryDayButton;\n","export const formatDateTitle = (date: Date) =>\n  date.toLocaleDateString(\"en-US\", {\n    weekday: \"long\",\n    month: \"short\",\n    day: \"numeric\"\n  });\n\nexport const getDaysInMonth = (date: Date) =>\n  new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n","import DeliveryDayButtonDesc from \"./DeliveryDayButtonDesc\";\n\nexport default DeliveryDayButtonDesc;\n","import React from \"react\";\n\n// components\nimport Text from \"components/elements/Typography/Text\";\n\n// styles\nimport van from \"assets/images/van.svg\";\n\ntype DeliveryDayButtonDesc = {\n  formattedDateTitle: string;\n};\n\nconst DeliveryDayButtonDesc = ({\n  formattedDateTitle\n}: DeliveryDayButtonDesc) => (\n  <div className=\"delivery-day-button__description\">\n    <Text>{formattedDateTitle}</Text>\n    <Text type=\"small\" className=\"delivery-day-button__description-badge\">\n      <span className=\"delivery-day-button__icon-line\" />\n      <span className=\"delivery-day-button__icon-line\" />\n      <span className=\"delivery-day-button__icon-line\" />\n      <img src={van} alt=\"van\" />\n      Earliest delivery\n    </Text>\n  </div>\n);\n\nexport default DeliveryDayButtonDesc;\n","import { useState, useEffect, MutableRefObject } from \"react\";\n\ntype UseClickOutside = {\n  isActive: boolean;\n};\n\ntype OnClickOutside = (e: MouseEvent) => void;\n\nfunction useClickOutside<T>(\n  ref: MutableRefObject<T & HTMLElement>,\n  onClickOutside: OnClickOutside\n): UseClickOutside {\n  const [isActive, setActive] = useState(false);\n\n  const mousedown = (e: MouseEvent): void => {\n    const { current } = ref;\n    const el = e.target;\n\n    if (!(current && el instanceof Node && current.contains(el))) {\n      setActive(true);\n      onClickOutside(e);\n    }\n  };\n\n  const mouseup = (e: MouseEvent): void => {\n    const { current } = ref;\n    const el = e.target;\n\n    if (!(current && el instanceof Node && current.contains(el))) {\n      setActive(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", mousedown);\n    document.addEventListener(\"mouseup\", mouseup);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", mousedown);\n      document.removeEventListener(\"mouseup\", mouseup);\n    };\n  }, []);\n\n  return { isActive };\n}\n\nexport default useClickOutside;\n","import { useState, useEffect, useContext } from \"react\";\n\n// utils\nimport { ModalContext } from \"core/context/ModalProvider\";\n\ntype UseModal = {\n  isModalOpen: boolean;\n  onClose: () => void;\n};\n\nconst useModal = ({ isModalOpen, onClose }: UseModal) => {\n  const modalNode = useContext(ModalContext);\n\n  const [fadeType, setFadeType] = useState<string | null>(null);\n\n  const handleTransitionEnd = (e: TransitionEvent) => {\n    if (e.propertyName !== \"opacity\" || fadeType === \"in\") return;\n\n    if (fadeType === \"out\") {\n      onClose();\n    }\n  };\n\n  const handleClose = () => {\n    setFadeType(\"out\");\n  };\n\n  useEffect(() => {\n    setTimeout(() => setFadeType(\"in\"), 0);\n  }, []);\n\n  useEffect(() => {\n    setFadeType(\"out\");\n  }, [isModalOpen]);\n\n  return {\n    modalNode,\n    handleClose,\n    handleTransitionEnd,\n    fadeType\n  };\n};\n\nexport default useModal;\n","import Modal from \"./Modal\";\n\nexport default Modal;\n","import React, { useRef, cloneElement, ReactElement } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// hooks\nimport useClickOutside from \"hooks/useClickOutside\";\nimport useModal from \"components/blocks/Modal/useModal\";\n\n// styles\nimport \"components/blocks/Modal/Modal.scss\";\n\ntype Modal = {\n  isModalOpen: boolean;\n  children: ReactElement;\n  onClose: () => void;\n};\n\nconst Modal = ({ isModalOpen, onClose, children }: Modal) => {\n  const { modalNode, handleClose, handleTransitionEnd, fadeType } = useModal({\n    onClose,\n    isModalOpen\n  });\n\n  const modalContentRef = useRef(null);\n\n  useClickOutside<HTMLLIElement>(\n    modalContentRef as HTMLDivElement & null,\n    handleClose\n  );\n\n  return modalNode\n    ? ReactDOM.createPortal(\n        <div\n          className={`modal__wrapper fade-${fadeType}`}\n          onTransitionEnd={handleTransitionEnd as () => void}\n        >\n          <div className=\"modal__overflow\" />\n          <div ref={modalContentRef} className=\"modal__content\">\n            {cloneElement(children, { handleClose })}\n          </div>\n        </div>,\n        modalNode as HTMLDivElement & null\n      )\n    : null;\n};\n\nexport default Modal;\n","import CalendarMonth from \"./CalendarMonth\";\n\nexport default CalendarMonth;\n","import React from \"react\";\n\n// components\nimport Title from \"components/elements/Typography/Title\";\n\n// styles\nimport \"features/delivery/components/Calendar/CalendarMonth/CalendarMonth.scss\";\n\nconst CalendarMonth = () => (\n  <Title className=\"calendar__month-title\">August 2019</Title>\n);\n\nexport default CalendarMonth;\n","import CalendarWeek from \"./CalendarWeek\";\n\nexport default CalendarWeek;\n","import React from \"react\";\n\n// components\nimport Text from \"components/elements/Typography/Text\";\n\n// styles\nimport \"features/delivery/components/Calendar/CalendarWeek/CalendarWeek.scss\";\n\nconst CalendarWeek = () => {\n  const calendarWeek = [\n    { day: 1, label: \"M\" },\n    { day: 2, label: \"T\" },\n    { day: 3, label: \"W\" },\n    { day: 4, label: \"T\" },\n    { day: 5, label: \"F\" },\n    { day: 6, label: \"S\" },\n    { day: 7, label: \"S\" }\n  ];\n\n  return (\n    <div className=\"calendar__week\">\n      {calendarWeek.map(({ day, label }) => (\n        <Text key={day} className=\"calendar__week-day\">\n          {label}\n        </Text>\n      ))}\n    </div>\n  );\n};\n\nexport default CalendarWeek;\n","import CalendarDays from \"./CalendarDays\";\n\nexport default CalendarDays;\n","import React, { useEffect } from \"react\";\n\n// utils\nimport { CalendarDays as CalendarDaysType } from \"features/delivery/components/DeliveryDayButton/useDeliveryDayButton\";\n\n// components\nimport Text from \"components/elements/Typography/Text\";\n\n// styles\nimport \"features/delivery/components/Calendar/CalendarDays/CalendarDays.scss\";\n\ntype CalendarDays = {\n  calendarDays: CalendarDaysType[];\n  selectedDate: Date;\n  activeDate: Date;\n  setActiveDate: (date: Date) => void;\n};\n\nconst CalendarDays = ({\n  calendarDays,\n  selectedDate,\n  activeDate,\n  setActiveDate\n}: CalendarDays) => {\n  useEffect(() => {\n    setActiveDate(selectedDate);\n  }, [selectedDate]);\n\n  return (\n    <div className=\"calendar__days\">\n      {calendarDays.map(({ day, date, className = \"\" }) => (\n        <div\n          key={day}\n          className={`calendar__days-item ${className} ${\n            activeDate.getDate() === date.getDate()\n              ? \"calendar__days-item--selected\"\n              : \"\"\n          }`}\n          onClick={() => setActiveDate(date)}\n        >\n          <Text className=\"calendar__days-item-text\">{day}</Text>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CalendarDays;\n","type UseCalendarControls = {\n  activeDate: Date;\n  selectedDate: Date;\n  setSelectedDate: (date: Date) => void;\n  onModalClose?: () => void;\n};\n\nconst useCalendarControls = ({\n  onModalClose = () => {},\n  activeDate,\n  selectedDate,\n  setSelectedDate\n}: UseCalendarControls) => {\n  const handleSelectDateConfirm = () => {\n    onModalClose();\n    setSelectedDate(activeDate);\n  };\n\n  const handleSelectDateCancel = () => {\n    onModalClose();\n    setSelectedDate(selectedDate);\n  };\n\n  return {\n    handleSelectDateConfirm,\n    handleSelectDateCancel\n  };\n};\n\nexport default useCalendarControls;\n","import Button from \"./Button\";\n\nexport default Button;\n","import React, { CSSProperties } from \"react\";\n\n// styles\nimport \"components/elements/Button/Button.scss\";\n\ntype ButtonType = \"regular\" | \"link\";\ntype ButtonSize = \"large\" | \"regular\" | \"small\";\n\ntype ButtonProps = {\n  type?: ButtonType;\n  size?: ButtonSize;\n  children: any;\n  className?: string;\n  style?: CSSProperties;\n  onClick?: () => void;\n};\n\nconst Button = ({\n  type = \"regular\",\n  size = \"regular\",\n  children,\n  onClick\n}: ButtonProps) => (\n  <button\n    onClick={onClick}\n    className={`button button--${type} button-size--${size}`}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import CalendarControls from \"./CalendarControls\";\n\nexport default CalendarControls;\n","import React from \"react\";\n\n// hooks\nimport useCalendarControls from \"features/delivery/components/Calendar/CalendarControls/useCalendarControls\";\n\n// components\nimport Button from \"components/elements/Button\";\n\n// styles\nimport \"features/delivery/components/Calendar/CalendarControls/CalendarControls.scss\";\n\ntype CalendarControls = {\n  activeDate: Date;\n  selectedDate: Date;\n  setSelectedDate: (date: Date) => void;\n  onModalClose?: () => void;\n};\n\nconst CalendarControls = ({\n  onModalClose,\n  activeDate,\n  selectedDate,\n  setSelectedDate\n}: CalendarControls) => {\n  const {\n    handleSelectDateConfirm,\n    handleSelectDateCancel\n  } = useCalendarControls({\n    onModalClose,\n    activeDate,\n    selectedDate,\n    setSelectedDate\n  });\n\n  return (\n    <div className=\"calendar__controls\">\n      <Button onClick={handleSelectDateCancel} type=\"link\" size=\"small\">\n        CANCEL, <br />\n        DON'T CHANGE\n      </Button>\n      <Button size=\"small\" onClick={handleSelectDateConfirm}>\n        CHANGE DATE\n      </Button>\n    </div>\n  );\n};\n\nexport default CalendarControls;\n","import Calendar from \"./Calendar\";\n\nexport default Calendar;\n","import React from \"react\";\n\n// utils\nimport { CalendarDays as CalendarDaysType } from \"features/delivery/components/DeliveryDayButton/useDeliveryDayButton\";\n\n// components\nimport CalendarMonth from \"features/delivery/components/Calendar/CalendarMonth\";\nimport CalendarWeek from \"features/delivery/components/Calendar/CalendarWeek\";\nimport CalendarDays from \"features/delivery/components/Calendar/CalendarDays\";\nimport CalendarControls from \"features/delivery/components/Calendar/CalendarControls\";\n\n// styles\nimport \"features/delivery/components/Calendar/Calendar.scss\";\n\ntype Calendar = {\n  calendarDays: CalendarDaysType[];\n  selectedDate: Date;\n  activeDate: Date;\n  setSelectedDate: (date: Date) => void;\n  setActiveDate: (date: Date) => void;\n  handleClose?: () => void;\n};\n\nconst Calendar = ({\n  calendarDays,\n  selectedDate,\n  setSelectedDate,\n  activeDate,\n  setActiveDate,\n  handleClose\n}: Calendar) => (\n  <div className=\"calendar__wrapper\">\n    <CalendarMonth />\n    <CalendarWeek />\n    <CalendarDays\n      calendarDays={calendarDays}\n      selectedDate={selectedDate}\n      activeDate={activeDate}\n      setActiveDate={setActiveDate}\n    />\n    <CalendarControls\n      onModalClose={handleClose}\n      activeDate={activeDate}\n      selectedDate={selectedDate}\n      setSelectedDate={setSelectedDate}\n    />\n  </div>\n);\n\nexport default Calendar;\n","import DeliveryDayButtonCalendar from \"./DeliveryDayButtonCalendar\";\n\nexport default DeliveryDayButtonCalendar;\n","import React from \"react\";\n\n// utils\nimport { CalendarDays as CalendarDaysType } from \"features/delivery/components/DeliveryDayButton/useDeliveryDayButton\";\n\n// components\nimport Text from \"components/elements/Typography/Text\";\nimport Modal from \"components/blocks/Modal\";\nimport Calendar from \"features/delivery/components/Calendar\";\n\n// styles\nimport calendar from \"assets/images/calendar.svg\";\n\ntype DeliveryDayButtonCalendarProps = {\n  selectedDate: Date;\n  activeDate: Date;\n  isModalOpen: boolean;\n  calendarDays: CalendarDaysType[];\n  setIsModalOpen: (x: boolean) => void;\n  setSelectedDate: (date: Date) => void;\n  setActiveDate: (date: Date) => void;\n};\n\nconst DeliveryDayButtonCalendar = ({\n  isModalOpen,\n  setIsModalOpen,\n  calendarDays,\n  selectedDate,\n  setSelectedDate,\n  activeDate,\n  setActiveDate\n}: DeliveryDayButtonCalendarProps) => (\n  <div className=\"delivery-day-button__calendar\">\n    <div className=\"delivery-day-button__calendar-icon\">\n      <img src={calendar} alt=\"calendar\" />\n      <Text type=\"small\" className=\"delivery-day-button__calendar-date\">\n        {selectedDate.getDate()}\n      </Text>\n    </div>\n    <div className=\"delivery-day-button__calendar-btn\">\n      <Text type=\"small\" className=\"delivery-day-button__calendar-btn-text\">\n        Change\n      </Text>\n    </div>\n\n    {isModalOpen && (\n      <Modal isModalOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <Calendar\n          calendarDays={calendarDays}\n          selectedDate={selectedDate}\n          setSelectedDate={setSelectedDate}\n          activeDate={activeDate}\n          setActiveDate={setActiveDate}\n        />\n      </Modal>\n    )}\n  </div>\n);\n\nexport default DeliveryDayButtonCalendar;\n","import DeliveryDayButton from \"./DeliveryDayButton\";\n\nexport default DeliveryDayButton;\n","import React, { useState } from \"react\";\n\n// hooks\nimport useDeliveryDayButton from \"features/delivery/components/DeliveryDayButton/useDeliveryDayButton\";\n\n// components\nimport DeliveryDayButtonDesc from \"features/delivery/components/DeliveryDayButton/DeliveryDayButtonDesc\";\nimport DeliveryDayButtonCalendar from \"features/delivery/components/DeliveryDayButton/DeliveryDayButtonCalendar\";\n\n// styles\nimport \"features/delivery/components/DeliveryDayButton/DeliveryDayButton.scss\";\n\nconst DeliveryDayButton = () => {\n  const {\n    calendarDays,\n    selectedDate,\n    setSelectedDate,\n    activeDate,\n    setActiveDate,\n    formattedDateTitle\n  } = useDeliveryDayButton();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <div\n      className=\"delivery-day-button__wrapper\"\n      onClick={() => setIsModalOpen(true)}\n    >\n      <DeliveryDayButtonDesc formattedDateTitle={formattedDateTitle} />\n      <DeliveryDayButtonCalendar\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        calendarDays={calendarDays}\n        selectedDate={selectedDate}\n        setSelectedDate={setSelectedDate}\n        activeDate={activeDate}\n        setActiveDate={setActiveDate}\n      />\n    </div>\n  );\n};\n\nexport default DeliveryDayButton;\n","import DeliveryDayWidget from \"./DeliveryDayWidget\";\n\nexport default DeliveryDayWidget;\n","import React from \"react\";\n\n// components\nimport Title from \"components/elements/Typography/Title\";\nimport Text from \"components/elements/Typography/Text\";\nimport DeliveryDayButton from \"features/delivery/components/DeliveryDayButton\";\n\n// styles\nimport \"features/delivery/components/DeliveryDayWidget/DeliveryDayWidget.scss\";\n\nconst DeliveryDayWidget = () => (\n  <div className=\"delivery-widget__wrapper\">\n    <div className=\"delivery-widget__header\">\n      <Title>Choose your delivery day</Title>\n      <Text type=\"small\" className=\"delivery-widget__description\">\n        Delivery is always free\n      </Text>\n    </div>\n    <DeliveryDayButton />\n  </div>\n);\n\nexport default DeliveryDayWidget;\n","import App from \"./App\";\n\nexport default App;\n","import React from \"react\";\n\n// utils\nimport ModalProvider from \"core/context/ModalProvider\";\n\n// components\nimport DeliveryDayWidget from \"features/delivery/components/DeliveryDayWidget\";\n\nconst App = () => (\n  <ModalProvider>\n    <DeliveryDayWidget />\n  </ModalProvider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// components\nimport App from \"core/app/App\";\n\n// styles\nimport \"styles/main.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}